name: Test Suite

on:
  push:
    tags:
      - "v*_fx"
      - "v*_bootstrap"
  # Triggers the workflow At minute 0 past every 6th hour
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

env:
  DAEMON_FOLDER: src/main/resources/daemon
  TAG_MATCHER: v*
  TAG_MATCHER_FX: v*_fx

jobs:
  build:
    name: Run tests
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          ref: master
      - run: git fetch -f --tags

      - name: set ARTIFACT_ID and FX_VERSION_COUNT
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "ARTIFACT_ID=$(echo $(git describe --tags --abbrev=0 --match v*_* | cut -d '_' -f2))" >> $GITHUB_ENV
          echo "FX_VERSION_COUNT=$(echo $(git tag --sort=-version:refname | grep -v _bootstrap | grep ${{ env.TAG_MATCHER_FX }} | wc -l))" >> $GITHUB_ENV

      - name: set ARGS_NEW_TAG if ARTIFACT_ID=fx
        if: ${{ env.ARTIFACT_ID == 'fx' }}
        run: echo "ARGS_NEW_TAG=$(echo -Drelease.tag=$(echo $(git describe --tags --abbrev=0 --match ${{ env.TAG_MATCHER }})))" >> $GITHUB_ENV

      - name: set ARGS_CURRENT_TAG if FX_VERSION_COUNT=1
        if: ${{ (env.ARTIFACT_ID == 'fx') && (env.FX_VERSION_COUNT == '1') }}
        run: echo "ARGS_CURRENT_TAG=$(echo -Dcurrent.tag=$(echo $(git tag --sort=-version:refname | grep -v _bootstrap | grep ${{ env.TAG_MATCHER }} | head -n 2 | tail -n -1)))" >> $GITHUB_ENV

      - name: set ARGS_CURRENT_TAG if FX_VERSION_COUNT!=1
        if: ${{ (env.ARTIFACT_ID == 'fx') && (env.FX_VERSION_COUNT != '1') }}
        run: echo "ARGS_CURRENT_TAG=$(echo -Dcurrent.tag=$(echo $(git tag --sort=-version:refname | grep -v _bootstrap |  grep ${{ env.TAG_MATCHER_FX }} | head -n 2 | tail -n -1)))" >> $GITHUB_ENV

      - run: echo ${{ env.ARGS_NEW_TAG }}
      - run: echo ${{ env.ARGS_CURRENT_TAG }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - run: mkdir -p ${{ env.DAEMON_FOLDER }}

      - name: Download Daemon
        uses: duhow/download-github-release-assets@v1
        with:
          repository: unigrid-project/daemon
          release-id: latest
          files: unigrid-*-x86_64-linux-gnu.tar.gz
          target: unigridd.tar.gz

      - name: Extract Daemon
        run: | 
          tar -xvf unigridd.tar.gz && cp unigrid-*/bin/unigridd ${{ env.DAEMON_FOLDER }}

      - name: Start Daemon
        run: | 
          ${{ env.DAEMON_FOLDER }}/unigridd -daemon

      - name: Build Config
        run: xvfb-run -a mvn -f config/pom.xml install -e

      - name: Build Parent
        run: xvfb-run -a mvn install ${{ env.ARGS_NEW_TAG }} ${{ env.ARGS_CURRENT_TAG }} -e
